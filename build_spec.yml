# Z-Forge Build Configuration for PowerEdge R730xd
builder_config:
  debian_release: bookworm
  kernel_version: latest
  output_iso_name: zforge-r730xd-proxmox-v3.iso
  enable_debug: true
  workspace_path: /tmp/zforge_workspace
  cache_packages: true

proxmox_config:
  version: latest
  minimal_install: true
  include_packages:
    - proxmox-ve
    - pve-kernel-6.8
    - zfs-dkms
    - zfsutils-linux
    - pve-zsync
    # Dell PowerEdge R730xd specific packages
    - ipmitool
    - openipmi
    - lm-sensors
    - nvme-cli
    - megacli
    - megactl
    - megaraid-status
    - srvadmin-all
    - snmp
    - ethtool
    - fio
    - smartmontools

zfs_config:
  version: latest
  build_from_source: true
  enable_encryption: true
  default_compression: lz4
  # R730xd has more RAM, can use larger ARC
  arc_max_size: "32G"
  # Server optimizations
  prefetch_disable: false  # Enable prefetch for better read perf
  zio_delay_max: 5000

bootloader_config:
  primary: zfsbootmenu
  # R730xd has UEFI, may not need two-stage boot
  enable_opencore: true
  enable_two_stage: false
  opencore_drivers:
    - NvmExpressDxe.efi
    - OpenRuntime.efi
  # Dell PowerEdge R730xd PCIe path configuration
  nvme_pcie_path: "PciRoot(0x0)/Pci(0x3,0x0)/Pci(0x0,0x0)"
  # Use UEFI mode for R730xd
  uefi_mode: true

dracut_config:
  modules:
    - zfs
    - systemd
    - network
  compress: zstd
  hostonly: true
  # Add serial console support
  kernel_cmdline: "root=zfs:AUTO console=tty0 console=ttyS0,115200n8 mitigations=auto,nosmt"
  extra_drivers:
    - nvme
    # Dell PERC RAID controller drivers
    - megaraid_sas
    - mpt3sas
    - mptbase
    - mptscsih
    # Network drivers for Dell PowerEdge R730xd
    - bnx2x
    - igb
    - ixgbe
    - i40e

# Dell PowerEdge R730xd specific configuration
dell_r730xd_config:
  enable_serial_console: true
  serial_port: "ttyS0"
  serial_speed: 115200
  enable_idrac: true
  # IPMI configuration
  ipmi_settings:
    enable_sol: true
    sol_speed: 115200
  # Hardware RAID configuration
  raid_monitoring: true
  # NVMe optimization for modern hardware
  nvme_settings:
    io_timeout: 4294967295
    max_host_mem_size_mb: 1024
    scheduler: "none"
    read_ahead_kb: 4096
    nr_requests: 4096
  # CPU optimization
  cpu_governor: "performance"
  # Memory optimization - R730xd supports more RAM
  system_memory:
    swappiness: 5
    dirty_ratio: 10
    min_free_kbytes: 1048576

# Include R730xd specific post-install scripts
post_install_scripts:
  - config/r730xd/r730xd_post_install.sh
  - config/r730xd/r730xd_nvme_tune.sh

modules:
  - name: WorkspaceSetup
    enabled: true
  - name: Debootstrap
    enabled: true
  - name: KernelAcquisition
    enabled: true
  - name: ZFSBuild
    enabled: true
  - name: DracutConfig
    enabled: true
  - name: ProxmoxIntegration
    enabled: true
  - name: LiveEnvironment
    enabled: true
  - name: CalamaresIntegration
    enabled: true
  - name: DellR730xdOptimize
    enabled: true
  - name: ISOGeneration
    enabled: true

# Custom ISO Build Versioning
iso_customization:
  iso_version: "r730xd-dev-build-$(date +%Y%m%d)" # Example dynamic version, ensure your build env can expand this

# Security Hardening Configuration
security_config:
  security_hardening_profile: "server" # Options: "baseline", "server", or "none" (or omit for none)

# Telemetry Configuration
telemetry_config:
  # Define the endpoint URL where telemetry data should be sent.
  # If commented out or empty, the TelemetryJob module will not attempt to send data.
  telemetry_endpoint_url: "https_example.com/telemetry_test_r730xd" # Placeholder URL
  # User consent is handled via the TelemetryConsent UI module in Calamares.
  # This URL is only used if the user explicitly opts-in during installation.
